<span class="hljs-keyword">struct</span> Uniforms {
  factor: <span class="hljs-type">f32</span>,
}
@<span class="hljs-keyword">group</span>(<span class="hljs-number">0</span>) @<span class="hljs-keyword">binding</span>(<span class="hljs-number">0</span>) <span class="hljs-keyword">var</span>&lt;<span class="hljs-keyword">uniform</span>&gt; uniforms: Uniforms;
@<span class="hljs-keyword">group</span>(<span class="hljs-number">0</span>) @<span class="hljs-keyword">binding</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">var</span>&lt;<span class="hljs-keyword">storage</span>&gt; colors: <span class="hljs-type">array</span>&lt;<span class="hljs-type">vec3</span>&lt;<span class="hljs-type">f32</span>&gt;&gt;;
@<span class="hljs-keyword">group</span>(<span class="hljs-number">0</span>) @<span class="hljs-keyword">binding</span>(<span class="hljs-number">2</span>) <span class="hljs-keyword">var</span> target: <span class="hljs-type">texture_storage_2d</span>&lt;<span class="hljs-keyword">rgba32float</span>, <span class="hljs-keyword">write</span>&gt;;

@<span class="hljs-keyword">compute</span> @<span class="hljs-keyword">workgroup_size</span>(<span class="hljs-number">256</span>)
<span class="hljs-keyword">fn</span> compute_pass(@<span class="hljs-keyword">builtin</span>(<span class="hljs-keyword">global_invocation_id</span>) gid: <span class="hljs-type">vec3u</span>) {
  <span class="hljs-built_in">textureStore</span>(target, gid.xy, <span class="hljs-type">vec4</span>(colors[gid.x].xyz, <span class="hljs-number">1.</span>));
}

<span class="hljs-keyword">alias</span> QuadVertices = <span class="hljs-type">array</span>&lt;<span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;, <span class="hljs-number">6</span>&gt;;
<span class="hljs-keyword">var</span>&lt;<span class="hljs-keyword">private</span>&gt; quad_vertices: QuadVertices = QuadVertices(
  <span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;(<span class="hljs-number">-1.0</span>,  <span class="hljs-number">1.0</span>),
  <span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;(<span class="hljs-number">-1.0</span>, <span class="hljs-number">-1.0</span>),
  <span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;( <span class="hljs-number">1.0</span>,  <span class="hljs-number">1.0</span>),
  <span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;( <span class="hljs-number">1.0</span>,  <span class="hljs-number">1.0</span>),
  <span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;(<span class="hljs-number">-1.0</span>, <span class="hljs-number">-1.0</span>),
  <span class="hljs-type">vec2</span>&lt;<span class="hljs-type">f32</span>&gt;( <span class="hljs-number">1.0</span>, <span class="hljs-number">-1.0</span>)
);

<span class="hljs-keyword">struct</span> VSOut {
  @<span class="hljs-keyword">builtin</span>(<span class="hljs-keyword">position</span>) pos: <span class="hljs-type">vec4</span>&lt;<span class="hljs-type">f32</span>&gt;,
}
@<span class="hljs-keyword">vertex</span> <span class="hljs-keyword">fn</span> quad_vert(@<span class="hljs-keyword">builtin</span>(<span class="hljs-keyword">vertex_index</span>) vid: <span class="hljs-type">u32</span>) -&gt; VSOut {
  <span class="hljs-keyword">return</span> VSOut(<span class="hljs-type">vec4</span>&lt;<span class="hljs-type">f32</span>&gt;(quad_vertices[vid], <span class="hljs-number">0.0</span>, <span class="hljs-number">1.0</span>));
}

@<span class="hljs-keyword">group</span>(<span class="hljs-number">0</span>) @<span class="hljs-keyword">binding</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">var</span> src: <span class="hljs-type">texture_2d</span>&lt;<span class="hljs-type">f32</span>&gt;;

@<span class="hljs-keyword">fragment</span> <span class="hljs-keyword">fn</span> quad_frag(@<span class="hljs-keyword">builtin</span>(<span class="hljs-keyword">position</span>) pos: <span class="hljs-type">vec4f</span>) -&gt; @<span class="hljs-keyword">location</span>(<span class="hljs-number">0</span>) <span class="hljs-type">vec4f</span> {
  <span class="hljs-keyword">var</span> color = <span class="hljs-built_in">textureLoad</span>(src, <span class="hljs-type">vec2u</span>(pos.xy), <span class="hljs-number">0</span>).xyz * uniforms.factor;
  <span class="hljs-keyword">return</span> <span class="hljs-type">vec4</span>(color, <span class="hljs-number">1.</span>);
}
